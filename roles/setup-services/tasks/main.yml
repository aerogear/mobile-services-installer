---
- name: Check namespace doesn't already exist
  shell: oc get namespace {{ namespace }}
  register: namespace_exists
  failed_when: namespace_exists.stderr != '' and 'NotFound' not in namespace_exists.stderr

- name: Create namespace {{ namespace }} if it doesnt exist
  shell: oc create namespace {{ namespace }}
  when: namespace_exists.rc != 0

- include_tasks: provision-service.yml
  with_items: "{{ datasync_server }}"

- name: Wait for the data sync server to be ready
  shell: oc get serviceinstance -o=jsonpath='{.items[*].status.conditions[0].status}' -n {{namespace}} | tr ' ' '\n' | grep True | wc -w
  register: ready_status_output
  until: ready_status_output.stdout.find('1') != -1
  retries: 100
  delay: 10
  failed_when: false
  changed_when: false

- name: Copy template for mobileclient CR
  template:
    src: mobileclient.json.j2
    dest: /tmp/mobileclient.json

- name: Create mobileclient
  shell: oc apply -f /tmp/mobileclient.json -n {{ mobile_services_namespace }}

- name: Remove temporary file
  file:
    path: /tmp/mobileclient.json
    state: absent

- name: Get uid of the mobileclient
  shell: oc get mobileclient app1 -o jsonpath={.metadata.uid} -n {{ mobile_services_namespace }}
  register: mobileclient_uid_output

- set_fact: appuid={{ mobileclient_uid_output.stdout }}

- name: Get route of the sync server
  shell: oc get route ionic-showcase-server -o jsonpath={.spec.host} -n {{ namespace }}
  register: sync_server_route_output

- set_fact: sync_server_url={{ sync_server_route_output.stdout }}

- include_tasks: create-binding.yml
  with_items:
    - binding-idm-app
    - binding-security
    - binding-sync-app

- name: Bind Push Android
  block:
    - include_tasks: create-push-app.yml
    - include_tasks: create-binding.yml
      with_items:
        - binding-ups-app-android
  when: push_android_server_key != "" and push_android_sender_id != ""

- name: Bind Push iOS
  block:
    - include_tasks: create-push-app.yml
    - include_tasks: create-binding.yml
      with_items:
        - binding-ups-app-ios
  when: push_ios_cert_content != "" and push_ios_cert_passphase != "" and push_ios_cert_production != ""

- name: Wait for Keycloak to be ready
  shell: oc get keycloakrealm {{ appname }} -o jsonpath={.status.phase} -n {{ mobile_services_namespace }}
  register: keycloak_status_output
  until: keycloak_status_output.stdout == 'reconcile'
  retries: 50
  delay: 5

- name: Assign roles to users
  include_tasks: configure-keycloak.yml

- name: Create keycloak config secret
  shell: oc get --export secret {{ appname }}-server-install-config -o json -n {{ mobile_services_namespace }} | oc create -f - -n {{ namespace }}
  when: namespace != mobile_services_namespace

- name: Patch Showcase-server
  block:
    - name: Copy showcase-server patch template
      template:
        src: sync-patch.json.j2
        dest: /tmp/sync-patch.json

    - name: Patch deployment config for showcase-server
      shell: oc patch dc/ionic-showcase-server -p "$(cat /tmp/sync-patch.json)" -n {{ namespace }}

