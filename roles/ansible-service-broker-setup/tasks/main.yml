---

- name: Verify Ansible Service Broker project name exists
  block:
    - name: Get Ansible Service Broker project name
      shell: oc get projects | grep -e ansible-service-broker -e automation-service-broker | awk '{print $1}'
      register: broker_project_name
      failed_when: broker_project_name.stdout == ""
    - set_fact:
        broker_project_name: '{{ broker_project_name.stdout }}'
  rescue:
    - name: Fail when Ansible Service Broker project was not found
      pause:
        prompt: |
          Ansible Service Broker project not found.
          Please verify that currently logged in user has privileges to list and edit Ansible Service Broker Project.

          Hit Ctrl + c and then 'a' to abort the installation

- name: Get Ansible Service Broker Configmap
  shell: oc get configmap broker-config -o jsonpath='{.data.broker-config}' -n {{ broker_project_name }}
  register: original_configmap_raw

- set_fact:
    original_configmap: '{{ original_configmap_raw.stdout | from_yaml }}'

- name: Apply configuration of Broker necessary for Mobile Services
  set_fact:
    original_configmap: "{{ original_configmap|combine({ item.section: { item.name: item.value }}, recursive=True) }}"
  with_list: "{{ broker_mobile_configuration }}"

- name: Generate broker registry config from template
  template:
    src: ../templates/aerogearcatalog_registry.yaml.j2
    dest: /tmp/aerogearcatalog_registry.yaml

- name: Get additional config of broker registry (from /tmp/aerogearcatalog_registry.yaml)
  set_fact:
    additional_registry_config: "{{ lookup('file', '/tmp/aerogearcatalog_registry.yaml') | from_yaml }}"

- set_fact:
    additional_registry_config: "{{ additional_registry_config.registry }}"
    additional_registry_config_names: []
    
- set_fact:
    additional_registry_config_names: '{{ additional_registry_config_names + [item.name] }}'
  with_list: "{{ additional_registry_config }}"

- set_fact:
    new_registry_config: "{{ original_configmap.registry }}"
    existing_registries: []

- name: List existing registries
  set_fact:
     existing_registries: '{{ existing_registries + [item] }}'
  with_list: "{{ new_registry_config }}"
  when: item.name not in additional_registry_config_names

- set_fact:
    new_registry_config: '{{ existing_registries + additional_registry_config }}'

- set_fact:
    new_configmap: "{{ original_configmap|combine({ 'registry': new_registry_config }, recursive=True) }}"

- name: Patch existing configmap and redeploy Ansible Service Broker
  block:
    - set_fact:
        new_configmap_raw: "{{ new_configmap | to_nice_yaml | replace('\n', '\\n') }}"

    - name: Get Ansible Service Broker DeploymentConfig name
      shell: oc get dc -o jsonpath='{.items[*].metadata.name}' -n {{ broker_project_name }}
      register: asb_dc_name

    - set_fact:
        asb_dc_name: "{{ asb_dc_name.stdout }}"

    - name: Check if deployment of Ansible Service Broker is not in progress
      shell: "oc rollout history dc/{{ asb_dc_name }} -n {{ broker_project_name }} | grep Running"
      retries: 20
      delay: 10
      register: result
      until: not result.stdout
      failed_when: result.stdout

    - name: Patch Broker Configmap
      command: oc patch configmap broker-config -p "{\"data\":{\"broker-config\":\"{{ new_configmap_raw }}\" }}" -n {{ broker_project_name }}

    - name: Redeploy Ansible Service Broker
      shell: "oc rollout latest {{ asb_dc_name }} -n {{ broker_project_name }}"
  when: original_configmap != new_configmap